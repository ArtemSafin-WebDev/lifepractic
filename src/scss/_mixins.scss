@function max($numbers...) {
    @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
    @return m#{i}n(#{$numbers});
}

@mixin noHighlight() {
    -webkit-tap-highlight-color: transparent;
}

@mixin visuallyHidden() {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
}

@mixin fullpageBG {
    position: relative;
    background: none;
    &::before {
        content: '';
        position: absolute;
        z-index: -1;
        left: calc((100vw - 100%) / 2 * -1);
        width: 100vw;
        top: 0;
        bottom: 0;
        @content;
    }
}

@mixin objectFitCover() {
    object-fit: cover;
    object-position: center;
    font-family: 'object-fit: cover; object-position: center;';
}

@mixin objectFitCoverTop() {
    object-fit: cover;
    object-position: center top;
    font-family: 'object-fit: cover; object-position: center top;';
}

@mixin objectFitContain() {
    object-fit: contain;
    object-position: center;
    font-family: 'object-fit: contain; object-position: center;';
}

@mixin objectFitContainBottom() {
    object-fit: contain;
    object-position: center bottom;
    font-family: 'object-fit: contain; object-position: center bottom;';
}

@mixin noScrollbar {
    &::-webkit-scrollbar * {
        background: transparent;
    }
    &::-webkit-scrollbar-track {
        background-color: transparent;
    }
    &::-webkit-scrollbar {
        display: none;
        background-color: transparent;
    }
    &::-webkit-scrollbar-thumb {
        background-color: transparent;
    }
}

@mixin breakpoint($class) {
    @if $class == large-desktop {
        @media only screen and (max-width: (1600px)) {
            @content;
        }
    } @else if $class == desktop {
        @media only screen and (max-width: (1400px)) {
            @content;
        }
    } @else if $class == laptop {
        @media only screen and (max-width: (1200px)) {
            @content;
        }
    } @else if $class == tablet {
        @media only screen and (max-width: (1024px)) {
            @content;
        }
    } @else if $class == small-tablet {
        @media only screen and (max-width: (860px)) {
            @content;
        }
    } @else if $class == mobile {
        @media only screen and (max-width: (640px)) {
            @content;
        }
    } @else if $class == small-mobile {
        @media only screen and (max-width: (576px)) {
            @content;
        }
    } @else if $class == supersmall-mobile {
        @media only screen and (max-width: (370px)) {
            @content;
        }
    }
}

@mixin breakpointMF($class) {
    @if $class == large-desktop {
        @media only screen and (min-width: 1401px) {
            @content;
        }
    } @else if $class == desktop {
        @media only screen and (min-width: 1201px) {
            @content;
        }
    } @else if $class == laptop {
        @media only screen and (min-width: 1025px) {
            @content;
        }
    } @else if $class == tablet {
        @media only screen and (min-width: 861px) {
            @content;
        }
    } @else if $class == small-tablet {
        @media only screen and (min-width: 641px) {
            @content;
        }
    } @else if $class == mobile {
        @media only screen and (min-width: 577px) {
            @content;
        }
    }
}

@mixin redHover {
    position: relative;
    z-index: 1;
    overflow: hidden;
    transition: color 0.2s ease 0.1s, border-color .2s;
    
   

    
    &::before {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        padding-bottom: 100%;
        border-radius: 50%;
        background: #df5c4a;
        transition: transform 0.5s;

        z-index: -1;
        transform: translateX(-20%);
    }

    &::after {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        width: 140%;
        padding-bottom: 100%;
        border-radius: 50%;

        background: #d24932;
        transition: transform 1s;
        z-index: -1;
        transform: translateX(20%);
    }

    .no-touch &:hover {
        color: white;
        border-color: #d24932;
        transition: color 0.2s ease .1s, border-color .2s;
        &::before {
            transform: translateX(10%) scale(2);
            transition: transform 0.7s ease-out;
        }

        &::after {
            transform: translateX(-20%) scale(2.4);
            transition: transform 1.4s ease-out 0.2s;
        }
    }
}

@mixin blueHover() {
    position: relative;
    z-index: 1;
    overflow: hidden;
  
    transition: color 0.2s ease 0.3s, border-color .2s;
    &::before {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        padding-bottom: 100%;
        border-radius: 50%;
        background: #8ad0e4c4;
        transition: transform 0.5s;

        z-index: -1;
        transform: translateX(-20%);
    }

    &::after {
        content: '';
        position: absolute;
        top: 100%;
        left: 0;
        width: 140%;
        padding-bottom: 100%;
        border-radius: 50%;
        background: #7abed1;
        transition: transform 1s;

        z-index: -1;
        transform: translateX(20%);
    }

    .no-touch &:hover {
        color: white;
        border-color: #7abed1;
        
        transition: color 0.2s ease 0.1s, border-color .2s;
        &::before {
            transform: translateX(10%) scale(2);
            transition: transform 0.5s ease-out;
        }

        &::after {
            transform: translateX(-20%) scale(2.4);
            transition: transform 1s ease-out 0.2s;
        }
    }
}
